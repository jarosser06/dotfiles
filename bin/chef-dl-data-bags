#!/bin/bash
# Author: Jim Rosser
# Email: jarosser06@gmail.com
#
#   This will create the data bag directory if it exists and download
#   each item in the bag.
#
#   Download the users data bag and overwrite any existing items:
#     chef-dl-data-bags -f users
#
#   Download all data bags to a specific directory:
#     chef-dl-data-bags -d my_data_bags

COMMAND_NAME="chef-dl-data-bags"
force=0
data_bags=$(knife data bag list)
directory=$(pwd)

function usage {
cat <<EOF

Downloads a data bag or group of data bags to a specified directory.
Usage:
  ${COMMAND_NAME} [opts] [optional data bag name]
Options:
  -h - show this usage
  -f - overwrite data bags
EOF
}

function fail() {
  message=$1
  echo "Error: ${message}"
  exit 1
}

function fail_with_usage() {
  message=$1
  echo -e "\nError: ${message}\n"
  usage
  exit 1
}

function download_data_bag {
  db=$1

  mkdir -p $db
  pushd $db &> /dev/null
  data_bag_items=$(knife data bag show ${db})
  for item in $data_bag_items
  do
    # If the item exists and force is false continue
    if [ -a ${item}.json ]; then
      if [ $force == 0 ]; then
        echo "  Item ${item}.json already exists and force is not set"
        continue
      else
        echo "  WARN: Item ${item}.json already exists overwriting"
      fi
    fi

    echo "  Downloading item ${item}"
    knife data bag show ${db} ${item} -F json > ${item}.json 2> /dev/null
  done

  popd &> /dev/null
}

while getopts ":d:hf" flag
do
  case $flag in
    h)
      usage
      exit 0
      ;;
    f)
      force=1
      ;;
    d)
      directory=$OPTARG
      ;;
  esac
done

shift $((OPTIND-1))

if [ -z $1 ]; then
  pushd $directory &> /dev/null
  for data_bag in $data_bags
  do
    echo "Downloading data bag ${data_bag}"
    download_data_bag $data_bag
  done
  popd &> /dev/null
else
  exists=0
  for data_bag in $data_bags
  do
    if [ $data_bag == $1 ]; then
      exists=1
    fi
  done

  if [ $exists == 1 ]; then
    echo "Downloading data bag ${1}"
    pushd $directory &> /dev/null
    download_data_bag $data_bag
    popd &> /dev/null
  else
    fail "Data bag ${1} does not exist"
  fi
fi
